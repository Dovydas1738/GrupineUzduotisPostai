@page
@using GrupineUzduotisPostai.Core.Models
@using GrupineUzduotisPostai.Core.Services
@model PostaiFrontEnd.Pages.LoginModel
@{
	ViewData["Title"] = "Login";
}


<div class="text-center">
    <h2 class="display-4">Login</h2>
    <p>Enter your user name to see your posts.</p>
</div>


<br>
<br>
<br>

<form id="loginForm" class="text-center">
    <label for="userName">Enter Your User Name:</label><br>
    <input type="text" id="userName" name="userName" required><br><br>

    <button type="submit" id="submit-button" class="button-49" role="button">Login</button>
</form>

<br>
<br>
<br>

<div id="postContainer" style="margin-top: 20px" class="my-posts"></div>

<form id="updateForm" class="update-form">

    <label for="name">New name for your post:</label><br>
    <input type="text" id="name" name="name" required><br><br>

    <label for="content">New content for your post:</label><br>
    <input type="text" id="content" name="content" required><br><br>

    <label for="category">Select a new category:</label><br>
    <select id="category" name="category">
        <option value="1">OffTopic</option>
        <option value="2">Complaint</option>
        <option value="3">Advert</option>
        <option value="4">News</option>
    </select><br><br>

    <button type="submit" id="update-button" class="button-49" role="button">Update</button>
</form>



<script>
    document.getElementById('loginForm').addEventListener('submit', function (event) {
        event.preventDefault();
        const userName = document.getElementById('userName').value;
        if (userName.trim() === '') {
            alert('Please enter a username.');
            return;
        }
        const endpoint = `https://localhost:7075/Posts/GetPostsByUserName?userName=${encodeURIComponent(userName)}`;
        fetch(endpoint, {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok: ' + response.statusText);
                }
                return response.json();
            })
            .then(posts => {
                displayPosts(posts);
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
                alert('Error fetching posts: ' + error.message);
            });
    });

    let currentPostId = null;
    let currentUserId = null;
    let currentUserName = null;
    let currentDate = null;
    let currentViews = null;

    function displayPosts(posts) {
        const postContainer = document.getElementById('postContainer');
        postContainer.innerHTML = '';
        if (posts.length === 0) {
            postContainer.innerHTML = '<p>No posts found for the specified user.</p>';
            return;
        }
        posts.forEach(post => {
            const postElement = document.createElement('div');
            postElement.classList.add('post');
            postElement.style.border = '1px solid #ddd';
            postElement.style.padding = '10px';
            postElement.style.margin = '10px 0';

            const postTitle = document.createElement('h4');
            postTitle.textContent = post.name;

            const postContent = document.createElement('p');
            postContent.textContent = post.content;

            const postCategory = document.createElement('p');
            postCategory.textContent = `Category: ${post.category}`;

            
            const postDate = document.createElement('p');
            postDate.textContent = `Posted by ${post.user.userName} on ${new Date(post.date).toLocaleDateString()}`;

            const postViews = document.createElement('p');
            postViews.textContent = `Views: ${post.views}`;

            const deleteButton = document.createElement('button');
            deleteButton.textContent = 'Delete';
            deleteButton.classList.add('button-24');
            deleteButton.style.width = '80px';
            deleteButton.style.height = '40px';
            deleteButton.style.fontSize = '10px';
            deleteButton.addEventListener('click', function () {
                deletePost(post.id);
                deleteButton.innerText = 'Post is being deleted';
                deleteButton.style.background = '#3CD5EF';
            });

            const updateButton = document.createElement('button');
            updateButton.textContent = 'Update';
            updateButton.classList.add('button-24');
            updateButton.style.width = '80px';
            updateButton.style.height = '40px';
            updateButton.style.margin = '10px';
            updateButton.style.fontSize = '10px';
            updateButton.addEventListener('click', function () {

                document.getElementById('updateForm').style.display = 'block';
                currentPostId = post.id;
                currentUserId = post.user.userId;
                currentUserName = post.user.userName;
                currentCategory = parseInt(post.category);
                currentViews = post.views;

                currentDate = post.date;
                document.getElementById('name').value = post.name;
                document.getElementById('content').value = post.content;
                document.getElementById('category').value = post.category;
                document.getElementById('updateForm').style.display = 'block';

            });



            postElement.appendChild(postTitle);
            postElement.appendChild(postContent);
            postElement.appendChild(postCategory);
            postElement.appendChild(postDate);
            postElement.appendChild(postViews);
            postElement.appendChild(deleteButton);
            postElement.appendChild(updateButton);
            postContainer.appendChild(postElement);
        });
    }

    function deletePost(postId) {
        const endpoint = `https://localhost:7075/Posts/DeletePost/${postId}`;

        fetch(endpoint, {
            method: 'DELETE',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }
                alert('Post has been deleted');
                window.location.href = '/Login'
                return response.json();
                
            })
            .then(data => {
                console.log('Success:', data);
                alert('Post has been deleted');
                window.location.reload(); 
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });
    }

   
    document.getElementById('updateForm').addEventListener('submit', function (event) {
        event.preventDefault();
        
        if (currentPostId === null) {
            alert('No post selected for update.');
            return;
        }

        const updatedPost = {
            id: currentPostId,
            userId: currentUserId,
            userName: currentUserName,
            name: document.getElementById('name').value,
            content: document.getElementById('content').value,
            category: parseInt(document.getElementById('category').value),
            date: currentDate,
            views: currentViews


        };

        const endpoint = `https://localhost:7075/Posts/UpdatePost`;
        
        fetch(endpoint, {
            method: 'PATCH',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(updatedPost)
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }
                alert('Post has been updated successfully.');
                document.getElementById('updateForm').reset();
                document.getElementById('updateForm').style.display = 'none';
                window.location.href = '/Login';
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
                alert('Error updating post: ' + error.message);
            });
    });

 
    
</script>


